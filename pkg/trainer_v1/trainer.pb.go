// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.12.4
// source: trainer.proto

package trainer_v1

import (
	empty "github.com/golang/protobuf/ptypes/empty"
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Status int32

const (
	Status_UNKNOWN  Status = 0
	Status_LOCAl    Status = 1
	Status_MODERING Status = 2
	Status_PUBLIC   Status = 3
)

// Enum value maps for Status.
var (
	Status_name = map[int32]string{
		0: "UNKNOWN",
		1: "LOCAl",
		2: "MODERING",
		3: "PUBLIC",
	}
	Status_value = map[string]int32{
		"UNKNOWN":  0,
		"LOCAl":    1,
		"MODERING": 2,
		"PUBLIC":   3,
	}
)

func (x Status) Enum() *Status {
	p := new(Status)
	*p = x
	return p
}

func (x Status) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Status) Descriptor() protoreflect.EnumDescriptor {
	return file_trainer_proto_enumTypes[0].Descriptor()
}

func (Status) Type() protoreflect.EnumType {
	return &file_trainer_proto_enumTypes[0]
}

func (x Status) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Status.Descriptor instead.
func (Status) EnumDescriptor() ([]byte, []int) {
	return file_trainer_proto_rawDescGZIP(), []int{0}
}

type ClientsTrainingProgramInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProgramName string `protobuf:"bytes,1,opt,name=program_name,json=programName,proto3" json:"program_name,omitempty"`
	Client      int64  `protobuf:"varint,2,opt,name=client,proto3" json:"client,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Status      Status `protobuf:"varint,4,opt,name=status,proto3,enum=trainer_v1.Status" json:"status,omitempty"`
}

func (x *ClientsTrainingProgramInfo) Reset() {
	*x = ClientsTrainingProgramInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trainer_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientsTrainingProgramInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientsTrainingProgramInfo) ProtoMessage() {}

func (x *ClientsTrainingProgramInfo) ProtoReflect() protoreflect.Message {
	mi := &file_trainer_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientsTrainingProgramInfo.ProtoReflect.Descriptor instead.
func (*ClientsTrainingProgramInfo) Descriptor() ([]byte, []int) {
	return file_trainer_proto_rawDescGZIP(), []int{0}
}

func (x *ClientsTrainingProgramInfo) GetProgramName() string {
	if x != nil {
		return x.ProgramName
	}
	return ""
}

func (x *ClientsTrainingProgramInfo) GetClient() int64 {
	if x != nil {
		return x.Client
	}
	return 0
}

func (x *ClientsTrainingProgramInfo) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ClientsTrainingProgramInfo) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_UNKNOWN
}

type ClientsTrainingProgram struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int64                       `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Info *ClientsTrainingProgramInfo `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`
}

func (x *ClientsTrainingProgram) Reset() {
	*x = ClientsTrainingProgram{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trainer_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientsTrainingProgram) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientsTrainingProgram) ProtoMessage() {}

func (x *ClientsTrainingProgram) ProtoReflect() protoreflect.Message {
	mi := &file_trainer_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientsTrainingProgram.ProtoReflect.Descriptor instead.
func (*ClientsTrainingProgram) Descriptor() ([]byte, []int) {
	return file_trainer_proto_rawDescGZIP(), []int{1}
}

func (x *ClientsTrainingProgram) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ClientsTrainingProgram) GetInfo() *ClientsTrainingProgramInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type TrainersTrainingProgramInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ProgramName string `protobuf:"bytes,1,opt,name=program_name,json=programName,proto3" json:"program_name,omitempty"`
	Trainer     int64  `protobuf:"varint,2,opt,name=trainer,proto3" json:"trainer,omitempty"`
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Status      Status `protobuf:"varint,4,opt,name=status,proto3,enum=trainer_v1.Status" json:"status,omitempty"`
}

func (x *TrainersTrainingProgramInfo) Reset() {
	*x = TrainersTrainingProgramInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trainer_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrainersTrainingProgramInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrainersTrainingProgramInfo) ProtoMessage() {}

func (x *TrainersTrainingProgramInfo) ProtoReflect() protoreflect.Message {
	mi := &file_trainer_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrainersTrainingProgramInfo.ProtoReflect.Descriptor instead.
func (*TrainersTrainingProgramInfo) Descriptor() ([]byte, []int) {
	return file_trainer_proto_rawDescGZIP(), []int{2}
}

func (x *TrainersTrainingProgramInfo) GetProgramName() string {
	if x != nil {
		return x.ProgramName
	}
	return ""
}

func (x *TrainersTrainingProgramInfo) GetTrainer() int64 {
	if x != nil {
		return x.Trainer
	}
	return 0
}

func (x *TrainersTrainingProgramInfo) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *TrainersTrainingProgramInfo) GetStatus() Status {
	if x != nil {
		return x.Status
	}
	return Status_UNKNOWN
}

type TrainersTrainingProgram struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int64                       `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Info *ClientsTrainingProgramInfo `protobuf:"bytes,2,opt,name=info,proto3" json:"info,omitempty"`
}

func (x *TrainersTrainingProgram) Reset() {
	*x = TrainersTrainingProgram{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trainer_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TrainersTrainingProgram) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TrainersTrainingProgram) ProtoMessage() {}

func (x *TrainersTrainingProgram) ProtoReflect() protoreflect.Message {
	mi := &file_trainer_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TrainersTrainingProgram.ProtoReflect.Descriptor instead.
func (*TrainersTrainingProgram) Descriptor() ([]byte, []int) {
	return file_trainer_proto_rawDescGZIP(), []int{3}
}

func (x *TrainersTrainingProgram) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *TrainersTrainingProgram) GetInfo() *ClientsTrainingProgramInfo {
	if x != nil {
		return x.Info
	}
	return nil
}

type GetClientsProgramsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TrainerId int64 `protobuf:"varint,1,opt,name=trainer_id,json=trainerId,proto3" json:"trainer_id,omitempty"`
}

func (x *GetClientsProgramsRequest) Reset() {
	*x = GetClientsProgramsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trainer_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetClientsProgramsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetClientsProgramsRequest) ProtoMessage() {}

func (x *GetClientsProgramsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_trainer_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetClientsProgramsRequest.ProtoReflect.Descriptor instead.
func (*GetClientsProgramsRequest) Descriptor() ([]byte, []int) {
	return file_trainer_proto_rawDescGZIP(), []int{4}
}

func (x *GetClientsProgramsRequest) GetTrainerId() int64 {
	if x != nil {
		return x.TrainerId
	}
	return 0
}

type GetClientsProgramsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientsPrograms []*ClientsTrainingProgram `protobuf:"bytes,1,rep,name=clients_programs,json=clientsPrograms,proto3" json:"clients_programs,omitempty"`
}

func (x *GetClientsProgramsResponse) Reset() {
	*x = GetClientsProgramsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trainer_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetClientsProgramsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetClientsProgramsResponse) ProtoMessage() {}

func (x *GetClientsProgramsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_trainer_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetClientsProgramsResponse.ProtoReflect.Descriptor instead.
func (*GetClientsProgramsResponse) Descriptor() ([]byte, []int) {
	return file_trainer_proto_rawDescGZIP(), []int{5}
}

func (x *GetClientsProgramsResponse) GetClientsPrograms() []*ClientsTrainingProgram {
	if x != nil {
		return x.ClientsPrograms
	}
	return nil
}

type GetProgramsWithTrainersRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientId int64 `protobuf:"varint,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
}

func (x *GetProgramsWithTrainersRequest) Reset() {
	*x = GetProgramsWithTrainersRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trainer_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProgramsWithTrainersRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProgramsWithTrainersRequest) ProtoMessage() {}

func (x *GetProgramsWithTrainersRequest) ProtoReflect() protoreflect.Message {
	mi := &file_trainer_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProgramsWithTrainersRequest.ProtoReflect.Descriptor instead.
func (*GetProgramsWithTrainersRequest) Descriptor() ([]byte, []int) {
	return file_trainer_proto_rawDescGZIP(), []int{6}
}

func (x *GetProgramsWithTrainersRequest) GetClientId() int64 {
	if x != nil {
		return x.ClientId
	}
	return 0
}

type GetProgramsWithTrainersResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TrainersPrograms []*ClientsTrainingProgram `protobuf:"bytes,1,rep,name=trainers_programs,json=trainersPrograms,proto3" json:"trainers_programs,omitempty"`
}

func (x *GetProgramsWithTrainersResponse) Reset() {
	*x = GetProgramsWithTrainersResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trainer_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetProgramsWithTrainersResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProgramsWithTrainersResponse) ProtoMessage() {}

func (x *GetProgramsWithTrainersResponse) ProtoReflect() protoreflect.Message {
	mi := &file_trainer_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProgramsWithTrainersResponse.ProtoReflect.Descriptor instead.
func (*GetProgramsWithTrainersResponse) Descriptor() ([]byte, []int) {
	return file_trainer_proto_rawDescGZIP(), []int{7}
}

func (x *GetProgramsWithTrainersResponse) GetTrainersPrograms() []*ClientsTrainingProgram {
	if x != nil {
		return x.TrainersPrograms
	}
	return nil
}

type GetClientsToAllowRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TrainerId int64 `protobuf:"varint,1,opt,name=trainer_id,json=trainerId,proto3" json:"trainer_id,omitempty"`
}

func (x *GetClientsToAllowRequest) Reset() {
	*x = GetClientsToAllowRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trainer_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetClientsToAllowRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetClientsToAllowRequest) ProtoMessage() {}

func (x *GetClientsToAllowRequest) ProtoReflect() protoreflect.Message {
	mi := &file_trainer_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetClientsToAllowRequest.ProtoReflect.Descriptor instead.
func (*GetClientsToAllowRequest) Descriptor() ([]byte, []int) {
	return file_trainer_proto_rawDescGZIP(), []int{8}
}

func (x *GetClientsToAllowRequest) GetTrainerId() int64 {
	if x != nil {
		return x.TrainerId
	}
	return 0
}

type GetTrainersToAllowRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientId int64 `protobuf:"varint,1,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
}

func (x *GetTrainersToAllowRequest) Reset() {
	*x = GetTrainersToAllowRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trainer_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTrainersToAllowRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTrainersToAllowRequest) ProtoMessage() {}

func (x *GetTrainersToAllowRequest) ProtoReflect() protoreflect.Message {
	mi := &file_trainer_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTrainersToAllowRequest.ProtoReflect.Descriptor instead.
func (*GetTrainersToAllowRequest) Descriptor() ([]byte, []int) {
	return file_trainer_proto_rawDescGZIP(), []int{9}
}

func (x *GetTrainersToAllowRequest) GetClientId() int64 {
	if x != nil {
		return x.ClientId
	}
	return 0
}

type GetClientsToAllowResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ClientId []int64 `protobuf:"varint,1,rep,packed,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
}

func (x *GetClientsToAllowResponse) Reset() {
	*x = GetClientsToAllowResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trainer_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetClientsToAllowResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetClientsToAllowResponse) ProtoMessage() {}

func (x *GetClientsToAllowResponse) ProtoReflect() protoreflect.Message {
	mi := &file_trainer_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetClientsToAllowResponse.ProtoReflect.Descriptor instead.
func (*GetClientsToAllowResponse) Descriptor() ([]byte, []int) {
	return file_trainer_proto_rawDescGZIP(), []int{10}
}

func (x *GetClientsToAllowResponse) GetClientId() []int64 {
	if x != nil {
		return x.ClientId
	}
	return nil
}

type GetTrainersToAllowResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TrainerId []int64 `protobuf:"varint,1,rep,packed,name=trainer_id,json=trainerId,proto3" json:"trainer_id,omitempty"`
}

func (x *GetTrainersToAllowResponse) Reset() {
	*x = GetTrainersToAllowResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trainer_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTrainersToAllowResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTrainersToAllowResponse) ProtoMessage() {}

func (x *GetTrainersToAllowResponse) ProtoReflect() protoreflect.Message {
	mi := &file_trainer_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTrainersToAllowResponse.ProtoReflect.Descriptor instead.
func (*GetTrainersToAllowResponse) Descriptor() ([]byte, []int) {
	return file_trainer_proto_rawDescGZIP(), []int{11}
}

func (x *GetTrainersToAllowResponse) GetTrainerId() []int64 {
	if x != nil {
		return x.TrainerId
	}
	return nil
}

type SetProgramToClientRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TrainerId int64 `protobuf:"varint,1,opt,name=trainer_id,json=trainerId,proto3" json:"trainer_id,omitempty"`
	ClientId  int64 `protobuf:"varint,2,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	ProgramId int64 `protobuf:"varint,3,opt,name=program_id,json=programId,proto3" json:"program_id,omitempty"`
}

func (x *SetProgramToClientRequest) Reset() {
	*x = SetProgramToClientRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trainer_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetProgramToClientRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetProgramToClientRequest) ProtoMessage() {}

func (x *SetProgramToClientRequest) ProtoReflect() protoreflect.Message {
	mi := &file_trainer_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetProgramToClientRequest.ProtoReflect.Descriptor instead.
func (*SetProgramToClientRequest) Descriptor() ([]byte, []int) {
	return file_trainer_proto_rawDescGZIP(), []int{12}
}

func (x *SetProgramToClientRequest) GetTrainerId() int64 {
	if x != nil {
		return x.TrainerId
	}
	return 0
}

func (x *SetProgramToClientRequest) GetClientId() int64 {
	if x != nil {
		return x.ClientId
	}
	return 0
}

func (x *SetProgramToClientRequest) GetProgramId() int64 {
	if x != nil {
		return x.ProgramId
	}
	return 0
}

type BlockTrainerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TrainerId int64 `protobuf:"varint,1,opt,name=trainer_id,json=trainerId,proto3" json:"trainer_id,omitempty"`
	ClientId  int64 `protobuf:"varint,2,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	ProgramId int64 `protobuf:"varint,3,opt,name=program_id,json=programId,proto3" json:"program_id,omitempty"`
}

func (x *BlockTrainerRequest) Reset() {
	*x = BlockTrainerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trainer_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockTrainerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockTrainerRequest) ProtoMessage() {}

func (x *BlockTrainerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_trainer_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockTrainerRequest.ProtoReflect.Descriptor instead.
func (*BlockTrainerRequest) Descriptor() ([]byte, []int) {
	return file_trainer_proto_rawDescGZIP(), []int{13}
}

func (x *BlockTrainerRequest) GetTrainerId() int64 {
	if x != nil {
		return x.TrainerId
	}
	return 0
}

func (x *BlockTrainerRequest) GetClientId() int64 {
	if x != nil {
		return x.ClientId
	}
	return 0
}

func (x *BlockTrainerRequest) GetProgramId() int64 {
	if x != nil {
		return x.ProgramId
	}
	return 0
}

type BlockClientRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TrainerId int64 `protobuf:"varint,1,opt,name=trainer_id,json=trainerId,proto3" json:"trainer_id,omitempty"`
	ClientId  int64 `protobuf:"varint,2,opt,name=client_id,json=clientId,proto3" json:"client_id,omitempty"`
	ProgramId int64 `protobuf:"varint,3,opt,name=program_id,json=programId,proto3" json:"program_id,omitempty"`
}

func (x *BlockClientRequest) Reset() {
	*x = BlockClientRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_trainer_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BlockClientRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockClientRequest) ProtoMessage() {}

func (x *BlockClientRequest) ProtoReflect() protoreflect.Message {
	mi := &file_trainer_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockClientRequest.ProtoReflect.Descriptor instead.
func (*BlockClientRequest) Descriptor() ([]byte, []int) {
	return file_trainer_proto_rawDescGZIP(), []int{14}
}

func (x *BlockClientRequest) GetTrainerId() int64 {
	if x != nil {
		return x.TrainerId
	}
	return 0
}

func (x *BlockClientRequest) GetClientId() int64 {
	if x != nil {
		return x.ClientId
	}
	return 0
}

func (x *BlockClientRequest) GetProgramId() int64 {
	if x != nil {
		return x.ProgramId
	}
	return 0
}

var File_trainer_proto protoreflect.FileDescriptor

var file_trainer_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x0a, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x76, 0x31, 0x1a, 0x1b, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70,
	0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67,
	0x65, 0x6e, 0x2d, 0x6f, 0x70, 0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x32, 0x2f, 0x6f, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x73, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa5, 0x01, 0x0a, 0x1a, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x73, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61,
	0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f,
	0x67, 0x72, 0x61, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x2a, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x12, 0x2e, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x76, 0x31, 0x2e,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0x64,
	0x0a, 0x16, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e,
	0x67, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x3a, 0x0a, 0x04, 0x69, 0x6e, 0x66, 0x6f,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x65, 0x72,
	0x5f, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x54, 0x72, 0x61, 0x69, 0x6e,
	0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04,
	0x69, 0x6e, 0x66, 0x6f, 0x22, 0xa8, 0x01, 0x0a, 0x1b, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x65, 0x72,
	0x73, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x72, 0x6f, 0x67,
	0x72, 0x61, 0x6d, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x72, 0x61, 0x69, 0x6e,
	0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x65,
	0x72, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0e, 0x32, 0x12, 0x2e, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x76, 0x31,
	0x2e, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22,
	0x65, 0x0a, 0x17, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x54, 0x72, 0x61, 0x69, 0x6e,
	0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x3a, 0x0a, 0x04, 0x69, 0x6e,
	0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x26, 0x2e, 0x74, 0x72, 0x61, 0x69, 0x6e,
	0x65, 0x72, 0x5f, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x54, 0x72, 0x61,
	0x69, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x04, 0x69, 0x6e, 0x66, 0x6f, 0x22, 0x3a, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x73, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x65, 0x72,
	0x49, 0x64, 0x22, 0x6b, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73,
	0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x4d, 0x0a, 0x10, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x5f, 0x70, 0x72, 0x6f, 0x67,
	0x72, 0x61, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x74, 0x72, 0x61,
	0x69, 0x6e, 0x65, 0x72, 0x5f, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x54,
	0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x52, 0x0f,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x73, 0x22,
	0x3d, 0x0a, 0x1e, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x73, 0x57, 0x69,
	0x74, 0x68, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x72,
	0x0a, 0x1f, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x73, 0x57, 0x69, 0x74,
	0x68, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x4f, 0x0a, 0x11, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x5f, 0x70, 0x72,
	0x6f, 0x67, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x74,
	0x72, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x76, 0x31, 0x2e, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x73, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d,
	0x52, 0x10, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61,
	0x6d, 0x73, 0x22, 0x39, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73,
	0x54, 0x6f, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x22, 0x38, 0x0a,
	0x19, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x54, 0x6f, 0x41, 0x6c,
	0x6c, 0x6f, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x38, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x73, 0x54, 0x6f, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x03, 0x28, 0x03, 0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49,
	0x64, 0x22, 0x3b, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73,
	0x54, 0x6f, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x1d, 0x0a, 0x0a, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x03, 0x52, 0x09, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x22, 0x76,
	0x0a, 0x19, 0x53, 0x65, 0x74, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x54, 0x6f, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x74,
	0x72, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x63,
	0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x67, 0x72,
	0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70, 0x72, 0x6f,
	0x67, 0x72, 0x61, 0x6d, 0x49, 0x64, 0x22, 0x70, 0x0a, 0x13, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x54,
	0x72, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d, 0x0a,
	0x0a, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a, 0x09,
	0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f,
	0x67, 0x72, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x70,
	0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x49, 0x64, 0x22, 0x6f, 0x0a, 0x12, 0x42, 0x6c, 0x6f, 0x63,
	0x6b, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1d,
	0x0a, 0x0a, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1b, 0x0a,
	0x09, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x08, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72,
	0x6f, 0x67, 0x72, 0x61, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x49, 0x64, 0x2a, 0x3a, 0x0a, 0x06, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x0b, 0x0a, 0x07, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10, 0x00,
	0x12, 0x09, 0x0a, 0x05, 0x4c, 0x4f, 0x43, 0x41, 0x6c, 0x10, 0x01, 0x12, 0x0c, 0x0a, 0x08, 0x4d,
	0x4f, 0x44, 0x45, 0x52, 0x49, 0x4e, 0x47, 0x10, 0x02, 0x12, 0x0a, 0x0a, 0x06, 0x50, 0x55, 0x42,
	0x4c, 0x49, 0x43, 0x10, 0x03, 0x32, 0xce, 0x07, 0x0a, 0x09, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x65,
	0x72, 0x56, 0x31, 0x12, 0x8f, 0x01, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x73, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x25, 0x2e, 0x74, 0x72, 0x61,
	0x69, 0x6e, 0x65, 0x72, 0x5f, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x73, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x26, 0x2e, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2a, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x24, 0x12, 0x22, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x2d,
	0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x73, 0x2f, 0x7b, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x7d, 0x12, 0x9e, 0x01, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x50, 0x72, 0x6f,
	0x67, 0x72, 0x61, 0x6d, 0x73, 0x57, 0x69, 0x74, 0x68, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x65, 0x72,
	0x73, 0x12, 0x2a, 0x2e, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x73, 0x57, 0x69, 0x74, 0x68, 0x54, 0x72,
	0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x2b, 0x2e,
	0x74, 0x72, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x50, 0x72,
	0x6f, 0x67, 0x72, 0x61, 0x6d, 0x73, 0x57, 0x69, 0x74, 0x68, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x65,
	0x72, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2a, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x24, 0x12, 0x22, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x65, 0x72,
	0x73, 0x2d, 0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x73, 0x2f, 0x7b, 0x63, 0x6c, 0x69, 0x65,
	0x6e, 0x74, 0x5f, 0x69, 0x64, 0x7d, 0x12, 0x8c, 0x01, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x73, 0x54, 0x6f, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x12, 0x24, 0x2e, 0x74,
	0x72, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x73, 0x54, 0x6f, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x25, 0x2e, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x54, 0x6f, 0x41, 0x6c, 0x6c, 0x6f,
	0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2a, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x24, 0x12, 0x22, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x73, 0x2d,
	0x74, 0x6f, 0x2d, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x2f, 0x7b, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x7d, 0x12, 0x8f, 0x01, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61,
	0x69, 0x6e, 0x65, 0x72, 0x73, 0x54, 0x6f, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x12, 0x25, 0x2e, 0x74,
	0x72, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61,
	0x69, 0x6e, 0x65, 0x72, 0x73, 0x54, 0x6f, 0x41, 0x6c, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x26, 0x2e, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x73, 0x54, 0x6f, 0x41, 0x6c,
	0x6c, 0x6f, 0x77, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x2a, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x24, 0x12, 0x22, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x65,
	0x72, 0x73, 0x2d, 0x74, 0x6f, 0x2d, 0x61, 0x6c, 0x6c, 0x6f, 0x77, 0x2f, 0x7b, 0x63, 0x6c, 0x69,
	0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x7d, 0x12, 0x86, 0x01, 0x0a, 0x12, 0x53, 0x65, 0x74, 0x50,
	0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x54, 0x6f, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x25,
	0x2e, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x76, 0x31, 0x2e, 0x53, 0x65, 0x74, 0x50,
	0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x54, 0x6f, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x31, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x2b, 0x32, 0x26, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x73, 0x65, 0x74, 0x2d,
	0x70, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x2d, 0x74, 0x6f, 0x2d, 0x63, 0x6c, 0x69, 0x65, 0x6e,
	0x74, 0x2f, 0x7b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x7d, 0x3a, 0x01, 0x2a,
	0x12, 0x73, 0x0a, 0x0c, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x65, 0x72,
	0x12, 0x1f, 0x2e, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x76, 0x31, 0x2e, 0x42, 0x6c,
	0x6f, 0x63, 0x6b, 0x54, 0x72, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x2a, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x24, 0x22, 0x1f, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x2d, 0x74, 0x72,
	0x61, 0x69, 0x6e, 0x65, 0x72, 0x2f, 0x7b, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x69,
	0x64, 0x7d, 0x3a, 0x01, 0x2a, 0x12, 0x6f, 0x0a, 0x0b, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x43, 0x6c,
	0x69, 0x65, 0x6e, 0x74, 0x12, 0x1e, 0x2e, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x76,
	0x31, 0x2e, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x28, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x22, 0x22, 0x1d, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x62, 0x6c, 0x6f, 0x63, 0x6b,
	0x2d, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x2f, 0x7b, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x5f,
	0x69, 0x64, 0x7d, 0x3a, 0x01, 0x2a, 0x42, 0xc0, 0x01, 0x5a, 0x3d, 0x69, 0x74, 0x68, 0x75, 0x62,
	0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6b, 0x69, 0x72, 0x69, 0x6c, 0x6c, 0x6d, 0x63, 0x2f, 0x74, 0x72,
	0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x73, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x2f, 0x70,
	0x6b, 0x67, 0x2f, 0x74, 0x72, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x76, 0x31, 0x3b, 0x74, 0x72,
	0x61, 0x69, 0x6e, 0x65, 0x72, 0x5f, 0x76, 0x31, 0x92, 0x41, 0x7e, 0x12, 0x44, 0x0a, 0x1b, 0x54,
	0x72, 0x61, 0x69, 0x6e, 0x69, 0x6e, 0x67, 0x20, 0x53, 0x45, 0x52, 0x56, 0x45, 0x52, 0x20, 0x54,
	0x52, 0x41, 0x49, 0x4e, 0x45, 0x52, 0x20, 0x41, 0x50, 0x49, 0x22, 0x1e, 0x0a, 0x08, 0x54, 0x65,
	0x6c, 0x65, 0x67, 0x72, 0x61, 0x6d, 0x1a, 0x12, 0x68, 0x74, 0x74, 0x70, 0x73, 0x3a, 0x2f, 0x2f,
	0x74, 0x2e, 0x6d, 0x65, 0x2f, 0x4d, 0x63, 0x4b, 0x30, 0x33, 0x32, 0x05, 0x31, 0x2e, 0x30, 0x2e,
	0x30, 0x1a, 0x0e, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x68, 0x6f, 0x73, 0x74, 0x3a, 0x38, 0x30, 0x38,
	0x30, 0x2a, 0x02, 0x01, 0x02, 0x32, 0x10, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x2f, 0x6a, 0x73, 0x6f, 0x6e, 0x3a, 0x10, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x2f, 0x6a, 0x73, 0x6f, 0x6e, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_trainer_proto_rawDescOnce sync.Once
	file_trainer_proto_rawDescData = file_trainer_proto_rawDesc
)

func file_trainer_proto_rawDescGZIP() []byte {
	file_trainer_proto_rawDescOnce.Do(func() {
		file_trainer_proto_rawDescData = protoimpl.X.CompressGZIP(file_trainer_proto_rawDescData)
	})
	return file_trainer_proto_rawDescData
}

var file_trainer_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_trainer_proto_msgTypes = make([]protoimpl.MessageInfo, 15)
var file_trainer_proto_goTypes = []interface{}{
	(Status)(0),                             // 0: trainer_v1.Status
	(*ClientsTrainingProgramInfo)(nil),      // 1: trainer_v1.ClientsTrainingProgramInfo
	(*ClientsTrainingProgram)(nil),          // 2: trainer_v1.ClientsTrainingProgram
	(*TrainersTrainingProgramInfo)(nil),     // 3: trainer_v1.TrainersTrainingProgramInfo
	(*TrainersTrainingProgram)(nil),         // 4: trainer_v1.TrainersTrainingProgram
	(*GetClientsProgramsRequest)(nil),       // 5: trainer_v1.GetClientsProgramsRequest
	(*GetClientsProgramsResponse)(nil),      // 6: trainer_v1.GetClientsProgramsResponse
	(*GetProgramsWithTrainersRequest)(nil),  // 7: trainer_v1.GetProgramsWithTrainersRequest
	(*GetProgramsWithTrainersResponse)(nil), // 8: trainer_v1.GetProgramsWithTrainersResponse
	(*GetClientsToAllowRequest)(nil),        // 9: trainer_v1.GetClientsToAllowRequest
	(*GetTrainersToAllowRequest)(nil),       // 10: trainer_v1.GetTrainersToAllowRequest
	(*GetClientsToAllowResponse)(nil),       // 11: trainer_v1.GetClientsToAllowResponse
	(*GetTrainersToAllowResponse)(nil),      // 12: trainer_v1.GetTrainersToAllowResponse
	(*SetProgramToClientRequest)(nil),       // 13: trainer_v1.SetProgramToClientRequest
	(*BlockTrainerRequest)(nil),             // 14: trainer_v1.BlockTrainerRequest
	(*BlockClientRequest)(nil),              // 15: trainer_v1.BlockClientRequest
	(*empty.Empty)(nil),                     // 16: google.protobuf.Empty
}
var file_trainer_proto_depIdxs = []int32{
	0,  // 0: trainer_v1.ClientsTrainingProgramInfo.status:type_name -> trainer_v1.Status
	1,  // 1: trainer_v1.ClientsTrainingProgram.info:type_name -> trainer_v1.ClientsTrainingProgramInfo
	0,  // 2: trainer_v1.TrainersTrainingProgramInfo.status:type_name -> trainer_v1.Status
	1,  // 3: trainer_v1.TrainersTrainingProgram.info:type_name -> trainer_v1.ClientsTrainingProgramInfo
	2,  // 4: trainer_v1.GetClientsProgramsResponse.clients_programs:type_name -> trainer_v1.ClientsTrainingProgram
	2,  // 5: trainer_v1.GetProgramsWithTrainersResponse.trainers_programs:type_name -> trainer_v1.ClientsTrainingProgram
	5,  // 6: trainer_v1.TrainerV1.GetClientsPrograms:input_type -> trainer_v1.GetClientsProgramsRequest
	7,  // 7: trainer_v1.TrainerV1.GetProgramsWithTrainers:input_type -> trainer_v1.GetProgramsWithTrainersRequest
	9,  // 8: trainer_v1.TrainerV1.GetClientsToAllow:input_type -> trainer_v1.GetClientsToAllowRequest
	10, // 9: trainer_v1.TrainerV1.GetTrainersToAllow:input_type -> trainer_v1.GetTrainersToAllowRequest
	13, // 10: trainer_v1.TrainerV1.SetProgramToClient:input_type -> trainer_v1.SetProgramToClientRequest
	14, // 11: trainer_v1.TrainerV1.BlockTrainer:input_type -> trainer_v1.BlockTrainerRequest
	15, // 12: trainer_v1.TrainerV1.BlockClient:input_type -> trainer_v1.BlockClientRequest
	6,  // 13: trainer_v1.TrainerV1.GetClientsPrograms:output_type -> trainer_v1.GetClientsProgramsResponse
	8,  // 14: trainer_v1.TrainerV1.GetProgramsWithTrainers:output_type -> trainer_v1.GetProgramsWithTrainersResponse
	11, // 15: trainer_v1.TrainerV1.GetClientsToAllow:output_type -> trainer_v1.GetClientsToAllowResponse
	12, // 16: trainer_v1.TrainerV1.GetTrainersToAllow:output_type -> trainer_v1.GetTrainersToAllowResponse
	16, // 17: trainer_v1.TrainerV1.SetProgramToClient:output_type -> google.protobuf.Empty
	16, // 18: trainer_v1.TrainerV1.BlockTrainer:output_type -> google.protobuf.Empty
	16, // 19: trainer_v1.TrainerV1.BlockClient:output_type -> google.protobuf.Empty
	13, // [13:20] is the sub-list for method output_type
	6,  // [6:13] is the sub-list for method input_type
	6,  // [6:6] is the sub-list for extension type_name
	6,  // [6:6] is the sub-list for extension extendee
	0,  // [0:6] is the sub-list for field type_name
}

func init() { file_trainer_proto_init() }
func file_trainer_proto_init() {
	if File_trainer_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_trainer_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientsTrainingProgramInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trainer_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientsTrainingProgram); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trainer_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrainersTrainingProgramInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trainer_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TrainersTrainingProgram); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trainer_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetClientsProgramsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trainer_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetClientsProgramsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trainer_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProgramsWithTrainersRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trainer_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetProgramsWithTrainersResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trainer_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetClientsToAllowRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trainer_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTrainersToAllowRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trainer_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetClientsToAllowResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trainer_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTrainersToAllowResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trainer_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetProgramToClientRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trainer_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockTrainerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_trainer_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BlockClientRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_trainer_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   15,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_trainer_proto_goTypes,
		DependencyIndexes: file_trainer_proto_depIdxs,
		EnumInfos:         file_trainer_proto_enumTypes,
		MessageInfos:      file_trainer_proto_msgTypes,
	}.Build()
	File_trainer_proto = out.File
	file_trainer_proto_rawDesc = nil
	file_trainer_proto_goTypes = nil
	file_trainer_proto_depIdxs = nil
}
